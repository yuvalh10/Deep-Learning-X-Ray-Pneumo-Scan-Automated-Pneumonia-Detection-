{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1uT829kk5cWnMe05AsAf4X8A_bT7yA1Kg","timestamp":1711959974649},{"file_id":"1qdWt90zObN91XC0LBhD4Zgybxq_OFf6t","timestamp":1711888956343},{"file_id":"1wCaZ3yu0zDN_4g-CoL4GJtTRH8pw7cuw","timestamp":1711879168585}],"collapsed_sections":["LVNZ95Wvm83D"],"gpuType":"V100"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# Import Libraries and Modules"],"metadata":{"id":"ELxKPiu_myyD"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import os\n","import random\n","import re\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","from zipfile import ZipFile\n","from glob import glob\n","from google.colab import drive\n","from keras.models import Sequential\n","from PIL import Image\n","from tensorflow.keras import datasets, layers, models, optimizers\n","from tensorflow.keras.layers import Dropout, BatchNormalization\n","from matplotlib import pyplot as plt\n","from tensorflow.keras.optimizers import Adagrad\n","from sklearn.metrics import precision_recall_curve\n","from sklearn.metrics import precision_score, recall_score,f1_score\n","from sklearn.metrics import auc"],"metadata":{"id":"MmkQAqlLm0MI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Extract the images and clasiffing into 3 categories\n","# (healthy, virus, bacterial)"],"metadata":{"id":"LVNZ95Wvm83D"}},{"cell_type":"code","source":["drive.mount('/content/drive')\n","\n","file_name = '/content/drive/My Drive/Final Project DL & ML/chest-xray.zip'\n","\n","with ZipFile(file_name, 'r') as zip_file:\n","  zip_file.extractall()  # Extract all contents of the ZIP file.\n","  print('Done')\n","\n","train_path = '/content/chest_xray/chest_xray/train'\n","val_path = '/content/chest_xray/chest_xray/val'\n","test_path = '/content/chest_xray/chest_xray/test'\n","\n","pre_path = '/content/chest_xray/chest_xray/'\n","\n","# Define paths for different sets and classes.\n","train_normal_dir = pre_path + 'train/NORMAL/'\n","train_pneu_dir = pre_path + 'train/PNEUMONIA/'\n","\n","test_normal_dir = pre_path + 'test/NORMAL/'\n","test_pneu_dir = pre_path + 'test/PNEUMONIA/'\n","\n","val_normal_dir = pre_path + 'val/NORMAL/'\n","val_pneu_dir = pre_path + 'val/PNEUMONIA/'\n","\n","\n","#initiazing the healthy, bacteria and virus cases of the images\n","virus = [] #1493 images total\n","bacteria = [] #2780 images total\n","healthy = [] #1583 images total\n","\n","healthy += glob(train_normal_dir + '*jpeg')\n","\n","#By using Regular Expressions we sorting the cases properly\n","#0- healthy, 1- virus case, 2 - bacteria case\n","for i in os.listdir(train_pneu_dir):\n","  if(re.search(\"virus.*jpeg\", i)):\n","      virus.append([train_pneu_dir+i,1])\n","  elif(re.search(\"bacteria.*jpeg\", i)):\n","      bacteria.append([train_pneu_dir+i,2])\n","\n","healthy += glob(test_normal_dir + '*jpeg')\n","\n","for i in os.listdir(test_pneu_dir):\n","  if(re.search(\"virus.*jpeg\", i)):\n","      virus.append([test_pneu_dir+i,1])\n","  elif(re.search(\"bacteria.*jpeg\", i)):\n","      bacteria.append([test_pneu_dir+i,2])\n","\n","healthy += glob(val_normal_dir + '*jpeg')\n","\n","for i in os.listdir(val_pneu_dir):\n","  if(re.search(\"virus.*jpeg\", i)):\n","      virus.append([val_pneu_dir+i,1])\n","  elif(re.search(\"bacteria.*jpeg\", i)):\n","      bacteria.append([val_pneu_dir+i,2])\n","\n","for i in range(len(healthy)):\n","  healthy[i]=(healthy[i],0)\n","\n","for lst in [healthy,virus,bacteria]:\n","  random.shuffle(lst)"],"metadata":{"id":"5uFuYeotlmK9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711986395914,"user_tz":-180,"elapsed":78362,"user":{"displayName":"יובל המר","userId":"00531576540532881377"}},"outputId":"53ffca82-496d-4bed-e48b-697548e2aa9e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Done\n"]}]},{"cell_type":"markdown","source":["# Creating the test, train and validation sets"],"metadata":{"id":"-eQ1RPSZmCFN"}},{"cell_type":"code","source":["# 20% validation and test sets, 60% train set from all data\n","# Splitting data into train, validation, and test sets\n","val = virus[:300] + bacteria[:556] + healthy[:316]\n","test = virus[300:600] + bacteria[556:1112] + healthy[316:632]\n","train = virus[600:] + bacteria[1112:] + healthy[632:]\n","\n","#val = virus[:25] + bacteria[:25] + healthy[:50]\n","#test = virus[25:325] + bacteria[25:550] + healthy[25:350]\n","#train = virus[325:] + bacteria[550:] + healthy[350:]\n","\n","def NormalPixels(data):\n","    # normalizing the pixels i=on every image and label\n","    normal = []\n","    labels = []\n","\n","    for im_path,label in data:\n","        image = Image.open(im_path)\n","        rgb_data = image.convert(\"L\").getdata() # gets grayscale image\n","        resized_image = rgb_data.resize((180,180))\n","        image_array = np.reshape(resized_image,(180,180)) # Convert the image to a NumPy array\n","        im_normal = image_array / 255.0 # normalizing\n","        normal.append(im_normal)\n","        labels.append(label)\n","\n","    return np.array(normal),np.array(labels)\n","\n","def CreatingtVal(val):\n","    val_norm, val_label = NormalPixels(val)  # Normalize validation data\n","    return val_norm, val_label\n","\n","def CreatingtTrain(train):\n","    train_norm, train_label = NormalPixels(train)  # Normalize training data\n","    return train_norm, train_label\n","\n","def CreatingtTest(test):\n","    test_norm, test_label = NormalPixels(test)  # Normalize test data\n","    return test_norm, test_label\n","\n","# Load and preprocess the data\n","val_norm, val_label = CreatingtVal(val)\n","train_norm, train_label = CreatingtTrain(train)\n","test_norm, test_label = CreatingtTest(test)\n","\n","test_label = tf.keras.utils.to_categorical(test_label)\n","train_label = tf.keras.utils.to_categorical(train_label)\n","val_label = tf.keras.utils.to_categorical(val_label)"],"metadata":{"id":"qzSaZAjpmBMA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Building the CNN model"],"metadata":{"id":"1nNPX65ynZ27"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"DhD1m9fed6Yp","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1711989739919,"user_tz":-180,"elapsed":88897,"user":{"displayName":"יובל המר","userId":"00531576540532881377"}},"outputId":"b5437524-05a3-47fe-c378-77b15c6f824d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Training CNN with ADAM: learning rate: 0.0001, epochs: 20\n","Model: \"sequential_20\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_118 (Conv2D)         (None, 180, 180, 32)      320       \n","                                                                 \n"," batch_normalization_98 (Ba  (None, 180, 180, 32)      128       \n"," tchNormalization)                                               \n","                                                                 \n"," max_pooling2d_118 (MaxPool  (None, 90, 90, 32)        0         \n"," ing2D)                                                          \n","                                                                 \n"," conv2d_119 (Conv2D)         (None, 90, 90, 64)        18496     \n","                                                                 \n"," max_pooling2d_119 (MaxPool  (None, 45, 45, 64)        0         \n"," ing2D)                                                          \n","                                                                 \n"," conv2d_120 (Conv2D)         (None, 45, 45, 64)        36928     \n","                                                                 \n"," dropout_60 (Dropout)        (None, 45, 45, 64)        0         \n","                                                                 \n"," batch_normalization_99 (Ba  (None, 45, 45, 64)        256       \n"," tchNormalization)                                               \n","                                                                 \n"," max_pooling2d_120 (MaxPool  (None, 23, 23, 64)        0         \n"," ing2D)                                                          \n","                                                                 \n"," conv2d_121 (Conv2D)         (None, 23, 23, 64)        36928     \n","                                                                 \n"," batch_normalization_100 (B  (None, 23, 23, 64)        256       \n"," atchNormalization)                                              \n","                                                                 \n"," max_pooling2d_121 (MaxPool  (None, 12, 12, 64)        0         \n"," ing2D)                                                          \n","                                                                 \n"," conv2d_122 (Conv2D)         (None, 12, 12, 128)       73856     \n","                                                                 \n"," dropout_61 (Dropout)        (None, 12, 12, 128)       0         \n","                                                                 \n"," batch_normalization_101 (B  (None, 12, 12, 128)       512       \n"," atchNormalization)                                              \n","                                                                 \n"," max_pooling2d_122 (MaxPool  (None, 6, 6, 128)         0         \n"," ing2D)                                                          \n","                                                                 \n"," conv2d_123 (Conv2D)         (None, 6, 6, 256)         295168    \n","                                                                 \n"," dropout_62 (Dropout)        (None, 6, 6, 256)         0         \n","                                                                 \n"," batch_normalization_102 (B  (None, 6, 6, 256)         1024      \n"," atchNormalization)                                              \n","                                                                 \n"," max_pooling2d_123 (MaxPool  (None, 3, 3, 256)         0         \n"," ing2D)                                                          \n","                                                                 \n"," flatten_20 (Flatten)        (None, 2304)              0         \n","                                                                 \n"," dense_20 (Dense)            (None, 3)                 6915      \n","                                                                 \n","=================================================================\n","Total params: 470787 (1.80 MB)\n","Trainable params: 469699 (1.79 MB)\n","Non-trainable params: 1088 (4.25 KB)\n","_________________________________________________________________\n","Epoch 1/20\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/backend.py:5575: UserWarning: \"`categorical_crossentropy` received `from_logits=True`, but the `output` argument was produced by a Softmax activation and thus does not represent logits. Was this intended?\n","  output, from_logits = _get_logits(\n"]},{"output_type":"stream","name":"stdout","text":["176/176 [==============================] - 10s 25ms/step - loss: 0.8658 - accuracy: 0.6842 - val_loss: 1.4501 - val_accuracy: 0.2585\n","Epoch 2/20\n","176/176 [==============================] - 3s 19ms/step - loss: 0.5975 - accuracy: 0.7648 - val_loss: 2.0150 - val_accuracy: 0.3140\n","Epoch 3/20\n","176/176 [==============================] - 4s 23ms/step - loss: 0.5158 - accuracy: 0.7990 - val_loss: 1.1649 - val_accuracy: 0.5324\n","Epoch 4/20\n","176/176 [==============================] - 4s 20ms/step - loss: 0.4543 - accuracy: 0.8192 - val_loss: 0.5210 - val_accuracy: 0.7594\n","Epoch 5/20\n","176/176 [==============================] - 3s 19ms/step - loss: 0.3968 - accuracy: 0.8408 - val_loss: 0.4885 - val_accuracy: 0.7892\n","Epoch 6/20\n","176/176 [==============================] - 3s 19ms/step - loss: 0.3374 - accuracy: 0.8710 - val_loss: 0.5687 - val_accuracy: 0.7696\n","Epoch 7/20\n","176/176 [==============================] - 4s 22ms/step - loss: 0.2964 - accuracy: 0.8761 - val_loss: 0.5490 - val_accuracy: 0.7910\n","Epoch 8/20\n","176/176 [==============================] - 4s 20ms/step - loss: 0.2698 - accuracy: 0.8978 - val_loss: 0.5489 - val_accuracy: 0.8046\n","Epoch 9/20\n","176/176 [==============================] - 3s 20ms/step - loss: 0.2491 - accuracy: 0.9038 - val_loss: 0.5714 - val_accuracy: 0.7892\n","Epoch 10/20\n","176/176 [==============================] - 3s 20ms/step - loss: 0.2071 - accuracy: 0.9160 - val_loss: 0.5395 - val_accuracy: 0.7875\n","Epoch 11/20\n","176/176 [==============================] - 4s 23ms/step - loss: 0.1876 - accuracy: 0.9245 - val_loss: 0.5721 - val_accuracy: 0.8012\n","Epoch 12/20\n","176/176 [==============================] - 3s 20ms/step - loss: 0.1674 - accuracy: 0.9368 - val_loss: 0.5737 - val_accuracy: 0.7867\n","Epoch 13/20\n","176/176 [==============================] - 3s 19ms/step - loss: 0.1530 - accuracy: 0.9382 - val_loss: 0.5920 - val_accuracy: 0.7833\n","Epoch 14/20\n","176/176 [==============================] - 4s 20ms/step - loss: 0.1332 - accuracy: 0.9510 - val_loss: 0.6164 - val_accuracy: 0.8012\n","Epoch 15/20\n","176/176 [==============================] - 4s 22ms/step - loss: 0.1180 - accuracy: 0.9559 - val_loss: 0.6310 - val_accuracy: 0.8003\n","Epoch 16/20\n","176/176 [==============================] - 3s 19ms/step - loss: 0.1109 - accuracy: 0.9618 - val_loss: 0.7793 - val_accuracy: 0.7619\n","Epoch 17/20\n","176/176 [==============================] - 3s 19ms/step - loss: 0.1107 - accuracy: 0.9581 - val_loss: 0.6822 - val_accuracy: 0.8114\n","Epoch 18/20\n","176/176 [==============================] - 4s 22ms/step - loss: 0.0897 - accuracy: 0.9655 - val_loss: 0.6641 - val_accuracy: 0.8072\n","Epoch 19/20\n","176/176 [==============================] - 4s 20ms/step - loss: 0.0707 - accuracy: 0.9741 - val_loss: 0.7158 - val_accuracy: 0.8097\n","Epoch 20/20\n","176/176 [==============================] - 3s 20ms/step - loss: 0.0566 - accuracy: 0.9815 - val_loss: 0.8098 - val_accuracy: 0.8038\n","37/37 [==============================] - 0s 7ms/step - loss: 0.8845 - accuracy: 0.8038\n","\n","Test accuracy:  0.8037542700767517\n","\n","Test loss:  0.8845216631889343\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Build the model\n","test_accs = []\n","test_loss_accs = []\n","epochs = [30,60]\n","learning_rates = [0.0005,0.00001]\n","\n","for lr in learning_rates:\n","  for epoch in epochs:\n","        print(f\"Training CNN with Adam: learning rate: {lr}, epochs: {epoch}\")\n","        CNN = models.Sequential()\n","\n","        CNN.add(layers.Conv2D(32, (3, 3), padding = 'same' ,activation='relu', input_shape=(180, 180, 1)))\n","        CNN.add(BatchNormalization())\n","        CNN.add(layers.MaxPooling2D((2,2) , strides = 2 , padding = 'same'))\n","        CNN.add(layers.Conv2D(64 , (3,3) , strides = 1 , padding = 'same' , activation = 'relu'))\n","\n","        CNN.add(layers.MaxPooling2D((2,2) , strides = 2 , padding = 'same'))\n","        CNN.add(layers.Conv2D(64 , (3,3) , strides = 1 , padding = 'same' , activation = 'relu'))\n","        CNN.add(Dropout(0.1))\n","        CNN.add(BatchNormalization())\n","\n","        CNN.add(layers.MaxPooling2D((2,2) , strides = 2 , padding = 'same'))\n","        CNN.add(layers.Conv2D(64 , (3,3) , strides = 1 , padding = 'same' , activation = 'relu'))\n","        CNN.add(BatchNormalization())\n","\n","        CNN.add(layers.MaxPooling2D((2,2) , strides = 2 , padding = 'same'))\n","        CNN.add(layers.Conv2D(128 , (3,3) , strides = 1 , padding = 'same' , activation = 'relu'))\n","        CNN.add(Dropout(0.2))\n","        CNN.add(BatchNormalization())\n","\n","        CNN.add(layers.MaxPooling2D((2,2) , strides = 2 , padding = 'same'))\n","        CNN.add(layers.Conv2D(256 , (3,3) , strides = 1 , padding = 'same' , activation = 'relu'))\n","        CNN.add(Dropout(0.2))\n","        CNN.add(BatchNormalization())\n","\n","        CNN.add(layers.MaxPooling2D((2,2) , strides = 2 , padding = 'same'))\n","\n","        CNN.add(layers.Flatten())\n","\n","        CNN.add(layers.Dense(3, activation='softmax'))\n","\n","        # Compile the model\n","        CNN.compile(optimizer = optimizers.Adam(learning_rate=lr),\n","                    loss=tf.keras.losses.CategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\n","\n","        CNN.summary()\n","\n","        history = CNN.fit(train_norm, train_label, epochs = epoch, batch_size = 20,\n","                            validation_data=(val_norm, val_label), verbose=1)\n","        # Evaluate the model on the test set\n","        test_loss, test_acc = CNN.evaluate(test_norm, test_label, verbose=1)\n","        test_accs.append((test_acc,f' Learning Rate: {lr}, Epochs: {epoch}'))\n","        test_loss_accs.append((test_loss,f'Learning Rate: {lr}, Epochs: {epoch}'))\n","        print(\"\\nTest accuracy: \", test_acc)\n","        print(\"\\nTest loss: \", test_loss)\n","        plt.plot(history.history['accuracy'], label='Training Accuracy')\n","        plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","        plt.title(f'Training and Validation Accuracy vs. Number of Epochs\\nOptimizer: Optimizer:Adam, Learning Rate: {lr}, Epochs: {epoch}')\n","        plt.xlabel('Epochs')\n","        plt.ylabel('Accuracy')\n","        plt.grid()\n","        plt.legend(loc='lower right')\n","        plt.show()\n","\n","        plt.clf() # clear figure\n","        plt.plot(history.history['loss'], label='Training loss')\n","\n","        plt.plot(history.history['val_loss'], label='Validation loss')\n","        plt.title(f'Training and Validation Loss vs. Number of Epochs\\nOptimizer:Adam, Learning Rate: {lr}, Epochs: {epoch}')\n","        plt.xlabel('Epochs')\n","        plt.ylabel('Loss')\n","        plt.grid()\n","        plt.legend(loc='upper right')\n","        plt.show()"]},{"cell_type":"markdown","source":["# plot loss and accuracy for the train and validation set"],"metadata":{"id":"FxbPZqqcnn61"}},{"cell_type":"code","source":["# Get the predicted probabilities for the test set\n","predicted_probabilities = CNN.predict(test_norm)\n","\n","# Convert probabilities to binary predictions (0 or 1)\n","predicted_labels = (predicted_probabilities > 0.5).astype(int)\n","\n","# Generate the confusion matrix\n","conf_matrix = confusion_matrix(test_label, predicted_labels)\n","\n","# Plot the confusion matrix\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False)\n","plt.xlabel('Predicted Labels')\n","plt.ylabel('True Labels')\n","plt.title('Confusion Matrix')\n","plt.show()\n","\n","precision, recall, _ = precision_recall_curve(test_label,predicted_labels)\n","\n","precision_values = []\n","recall_values = []\n","f1_values = []\n","\n","# Compute precision, recall, and threshold values for different thresholds\n","for threshold in np.arange(0.1, 0.95, 0.05):\n","    # Apply threshold to predicted probabilities\n","    predicted_labels = (predicted_probabilities > threshold)\n","    # Compute precision and recall\n","    precision = precision_score(test_label, predicted_labels)\n","    recall = recall_score(test_label, predicted_labels)\n","    f1 = f1_score(test_label, predicted_labels)\n","    precision_values.append(precision)\n","    recall_values.append(recall)\n","    f1_values.append(f1)\n","\n","# Plot the precision-recall curve\n","plt.figure(figsize=(8, 6))\n","plt.plot(recall_values, precision_values,recall_values,precision_values,'ro')\n","for i in range(len(precision_values)):\n","  plt.text(recall_values[i],precision_values[i],f' f1={f1_values[i]:.3}',fontsize = 7)\n","plt.xlabel('precision')\n","plt.ylabel('recall')\n","plt.title('Precision-Recall Curve')\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"h5pv8kasnlm_","executionInfo":{"status":"error","timestamp":1711989858006,"user_tz":-180,"elapsed":2091,"user":{"displayName":"יובל המר","userId":"00531576540532881377"}},"colab":{"base_uri":"https://localhost:8080/","height":349},"outputId":"16c18898-10e0-4cd7-e116-489dcb88cdf6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["37/37 [==============================] - 1s 8ms/step\n"]},{"output_type":"error","ename":"ValueError","evalue":"multilabel-indicator is not supported","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-e44a86a2e0bb>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Generate the confusion matrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mconf_matrix\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconfusion_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_label\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpredicted_labels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Plot the confusion matrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mconfusion_matrix\u001b[0;34m(y_true, y_pred, labels, sample_weight, normalize)\u001b[0m\n\u001b[1;32m    317\u001b[0m     \u001b[0my_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    318\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0my_type\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m\"binary\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"multiclass\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 319\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"%s is not supported\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0my_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    321\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: multilabel-indicator is not supported"]}]}]}